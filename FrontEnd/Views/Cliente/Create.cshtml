@model FrontEnd.Models.ClienteViewModel

<title>Crear Cliente</title>

<h1 class="mt-4">Crear Cliente</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active"></li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.id_compania, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.id_compania, new SelectList(Model.companias, "id", "nombre"), "-- Compañias --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.id_compania, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipo_identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tipo_identificacion, new SelectList(Model.identificacion_tipos, "id", "Descripcion"), "-- Tipos de Identificacion --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.tipo_identificacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actividad_economica, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.actividad_economica, new SelectList(Model.actividades_economicas, "id", "descripcion"), "-- Actividades Economicas --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.actividad_economica, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.genero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listaGeneros = new List<SelectListItem>();
                    listaGeneros.Add(new SelectListItem
                    {
                        Text = "Masculino",
                        Value = "M"
                    });
                    listaGeneros.Add(new SelectListItem
                    {
                        Text = "Femenino",
                        Value = "F",
                    });
                    listaGeneros.Add(new SelectListItem
                    {
                        Text = "Otro",
                        Value = "O"
                    });
                }

                @Html.DropDownListFor(model => model.genero, listaGeneros, "-- Géneros --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.genero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.pais, new SelectList(Model.paises, "id", "country_name"), "-- Paises --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.pais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.provincia, new SelectList(Model.provincias, "id", "Nombre"), "-- Provincias --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.canton, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.canton, new SelectList(Model.cantones, "canton", "Nombre"), "-- Cantones --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.canton, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.distrito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.distrito, new SelectList(Model.distritos, "id", "nombre"), "-- Distritos --", new { @class = "btn btn-secondary dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.distrito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dirrecion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dirrecion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dirrecion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-dark" /> |
                @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}


